<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">



	<!-- 이곳이 root-context.xml보다 먼저 실행되는 곳!
	DispatchServlet이 실행될 때 필요한 xml파일, 주로 spring관련된 xml을 정의한다.
	 -->

	<!-- 스프링 어노테이션을 사용하겠다는 의미, 절대 건드리면 안된다. -->
	<annotation-driven />
	
	
	<!-- 프로젝트에 필요한 resource 파일을 import하는 명령 css, js, jq등 들어감 -->
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- ViewResolver를 선언하는 xml부
		컨트롤러의 일반 메서드의 리턴값을 view name으로 자동으로 처리해주는 기능 
		ex) home -> /WEB-INF/views/home.jsp
		
		 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	
	
	<!-- 어노테이션을 자동으로 scan = 탐색하는 명령, 만일 없으면 어노테이션 사용이 불가하고 
		수동으로 bean선언해야한다. 
		
		@Cotroller 어노테이션을 찾은 경우, 자동으로 싱글톤으로 객체 생성을 시켜준다.
		-->
		
	
	<context:component-scan base-package="com.kh.springjm" />
	
	<!-- 아래부터는 사용자가 알아서 활용하는 영역! -->
	
	
	
</beans:beans>
